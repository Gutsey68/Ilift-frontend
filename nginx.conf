server {
    listen 80;
    server_name ilift.social;

    # Redirection HTTP vers HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name ilift.social;

    # Chemins des certificats SSL
    ssl_certificate /etc/ssl/certs/ilift.social.crt;
    ssl_certificate_key /etc/ssl/private/ilift.key;
    ssl_trusted_certificate /etc/ssl/certs/ca.crt;

    # Protocoles et cyphers SSL sécurisés
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Résolveur DNS interne (utile si vous utilisez Docker)
    resolver 127.0.0.11 valid=30s;

    # Définition de l'upstream backend
    set $backend_upstream "backend:4000";

    # Taille maximale du corps des requêtes
    client_max_body_size 10M;

    # Gestion des fichiers statiques et des routes de l'application frontend
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Proxy des requêtes API vers le backend
    location /api/ {
        proxy_pass http://$backend_upstream;
        proxy_http_version 1.1;

        # Mise à jour des en-têtes
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'keep-alive';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Gestion des fichiers dans le dossier uploads
    location /uploads/ {
        alias /usr/share/nginx/uploads/;
    }

    # Gestion des fichiers pour Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}
